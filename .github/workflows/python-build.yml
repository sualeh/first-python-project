name: Python Build for COMP-880

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  python-build-comp-880:

    runs-on: ubuntu-latest

    steps:
    - id: checkout-repo
      name: Checkout repository
      uses: actions/checkout@v3
    - id: setup-python
      name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'
    - id: install-dependencies
      name: Install dependencies
      shell: bash
      run: |
        # Install dependencies (globally on the GitHub Actions runner)
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        flake8 --version
        pytest -V
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - id: check-design
      name: Check for design document
      shell: bash
      run: |
        # Check for design document
        [ -f "DESIGN.md" ] && echo "Design file is present." || exit 1
    - id: compile
      name: Compile all files
      shell: bash
      run: |
        # Compile all files
        python -m compileall . -l
    - id: test
      name: Test with pytest
      shell: bash
      continue-on-error: true
      run: |
        # Run tests
        pytest
    - id: run
      name: Run all Python code
      shell: bash
      continue-on-error: true
      run: |
        # Run all code to see output
        for f in *.py; do python "$f"; done
    - id: lint-code
      name: Lint Python code
      continue-on-error: true
      shell: bash
      run: |
        # Lint Python code
        flake8 . --extend-ignore=D,N --show-source --count --max-complexity=10 --max-line-length=79
    - id: lint-pep-8
      name: Check for PEP-8 naming conventions
      continue-on-error: true
      shell: bash
      run: |
        # Check PEP-8 naming
        python -m pip install pep8-naming
        flake8 . --extend-ignore=D,E,W --show-source --count --max-complexity=10 --max-line-length=79
    - id: lint-docstrings
      name: Check that docstrings follow conventions
      continue-on-error: true
      shell: bash
      run: |
        # Check docstrings
        python -m pip install flake8-docstrings
        flake8 . --extend-ignore=N,E,W --show-source --count --max-complexity=10 --max-line-length=79
    - id: summary-report
      name: Summary of checks
      shell: bash
      run: |
        # Summary of checks
        echo "REPORT CARD:"
        echo "${{ steps.test.outcome }} -> Unit tests"
        echo "${{ steps.lint-code.outcome }} -> Python code lint"
        echo "${{ steps.lint-pep-8.outcome }} -> PEP-8 naming convention"
        echo "${{ steps.lint-docstrings.outcome }} -> Format for docstrings"
        #
        if [[ true \
            && ${{ steps.test.outcome }} == "success" \
            && ${{ steps.lint-code.outcome }} == "success" \
            && ${{ steps.lint-pep-8.outcome }} == "success" \
            && ${{ steps.lint-docstrings.outcome }} == "success" \
           ]]; \
          then exit 0;
          else exit 1;
        fi
